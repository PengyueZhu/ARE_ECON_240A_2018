<style>
.table{
  width:auto;
  font-size: 12px;
}
</style>

Assignment 3 - The Franciscans
========================================================
author: 
date: 
autosize: true
```{r echo=FALSE}
remove(list = ls())
library(tidyverse)
library(sandwich)
```

Question 1: X-Y plot weighted by leverage
========================================================
Run the simulation from Assignment II, for 
- $n=100$
- $\chi^2_{(1)}$ distribution.

```{r , echo=FALSE, fig.align="center", fig.height = 5, fig.width =12}
# function to draw from a specified distribution and calulate x, 
set.seed(10101)

dgp <- function(n,fo,df){
    # errors always N(0,1) distributed
    eps <<- rnorm(n=n)
    # draw x from specified distribution
    x   <<- fo(n=n, df=df)
    # calculate y
    y   <<- x^2 + eps
}
const <- 1
dgp(100,rchisq, df = 1)
xmat <- as.matrix(x, const)
leverage <- rowSums(xmat*(xmat%*%solve(t(xmat)%*%xmat)))


dat <- as.data.frame(cbind(x, y, leverage, const))

ggplot(aes(x=x, y=y, size=leverage), data = dat) + geom_smooth(method = "lm", aes(x=x, y=y), inherit.aes = FALSE) + geom_point() 
```


```{r , echo=FALSE}
remove(list = ls())
set.seed(10101)
sandwichMC <- function(sig2){
  d <- c(rep(0, 27), rep(1, 3))
  e <- c(rnorm(27, sd = sqrt(sig2)), rnorm(3, sd = 1))
  y <- e
  reg <- lm(y~d)
  beta  <- reg$coeff[2] 
  se <- summary(reg)$coef[2,2]
  sigmaHat2 <- c(resid(reg))^2
  sigma2s<- c(rep(sig2, 27), rep(1, 3))

  hc1 <- sqrt(sandwich(reg, meat. = meatHC(reg, omega=sigmaHat2))[2,2])
  uhc1 <- sqrt(sandwich(reg, meat. = meatHC(reg, omega=sigma2s))[2,2])
  return(data.frame("beta"=beta, "se" = se, "hc1" = hc1, "uhc1" = uhc1))

}
S <- 10000

params_gr <- expand.grid(1:S, sig2=c(0.25, 1))
res_gr <- mapply(sandwichMC, sig=params_gr$sig, SIMPLIFY = FALSE) %>%
bind_rows() %>%
  cbind(params_gr) %>%
  mutate(tratioSt = beta/se) %>%
  mutate(tratioHc1 = beta/hc1) %>%
  mutate(tratioUhc1 = beta/uhc1) %>%
  mutate(PvalSt = abs(tratioSt) >  2.048)%>%
  mutate(PvalHc1 = abs(tratioHc1) >  2.048) %>%
  mutate(PvalUhc1 = abs(tratioUhc1) >  2.048)
cols <- sapply(res_gr, is.logical)
res_gr[,cols] <- lapply(res_gr[,cols], as.numeric)


```

Question 2: Monte Carlo results for robust standard error estimates
========================================================
```{r, echo=FALSE}
sumtable1 <- summarise(filter(res_gr, (sig2 == 0.25)), mean = mean(beta), se = sqrt(var(beta)), pval = NA )
sumtable2 <- summarise(filter(res_gr, (sig2 == 0.25)), mean = mean(se), se = sqrt(var(se)), pval = mean(PvalSt))
sumtable3 <- summarise(filter(res_gr, (sig2 == 0.25)), mean = mean(hc1), se = sqrt(var(hc1)), pval = mean(PvalHc1))
sumtable4 <- summarise(filter(res_gr, (sig2 == 0.25)), mean = mean(uhc1), se = sqrt(var(uhc1)), pval = mean(PvalUhc1))

sumtable5 <- summarise(filter(res_gr, (sig2 == 1)), mean = mean(beta), se = sqrt(var(beta)), pval = NA)
sumtable6 <- summarise(filter(res_gr, (sig2 == 1)), mean = mean(se), se = sqrt(var(se)), pval = mean(PvalSt))
sumtable7 <- summarise(filter(res_gr, (sig2 == 1)), mean = mean(hc1), se = sqrt(var(hc1)), pval = mean(PvalHc1))
sumtable8 <- summarise(filter(res_gr, (sig2 == 1)), mean = mean(uhc1), se = sqrt(var(uhc1)), pval = mean(PvalUhc1))

table1 <- bind_rows(sumtable1, sumtable2, sumtable3, sumtable4) %>% `rownames<-`(c("Beta 1", "Conventional", "HC1", "Oracle HC1"))
table2 <- bind_rows(sumtable5, sumtable6, sumtable7, sumtable8) %>% `rownames<-`(c("Beta 1", "Conventional", "HC1", "Oracle HC1"))
```

<small> Lots of heteroskedasticity </small>
```{r, echo=FALSE}
kable(table1, col.names = c("Mean", "Standard Deviation", "5% rejection rate"), caption= "Lots of heteroskedasticity", digits = 3)
```

<small> No heteroskedasticity </small>
```{r, echo=FALSE}
kable(table2, col.names = c("Mean", "Standard Deviation", "5% rejection rate"), caption = "No heteroskedasticity", digits = 3)  
```



T ratio plot:  with conventional vcov
========================================================
- As expected, the conventional estimate rejects the correct number of trials in the homoskedastic case
- In heteroskedastic case ($\sigma^2 = 0.25$),the conventional estimate rejects too many trials. (25% comparied to the expected 5%)
  - This is due to the high-leverage observations, where D = 1, having lower expected error than the low-leverage observations. 
  
```{r, echo=FALSE, fig.align="center", fig.height = 5, fig.width =12}
ggplot(aes(x=tratioSt), data=res_gr)+ geom_density(alpha=I(0.5)) + facet_grid(. ~ sig2) + stat_function(fun=dt, color="red",args=list(df = 28))
```



T ratio plot: with HC1
========================================================
 - The HC1 Variance estimate over-rejects compared to the expected 5%. This is because the error estimates are not correct.
 - The GLS variance is BLUE under heteroskedasticity, but the HC1 variance estimate is larger than the GLS variance.

```{r, echo=FALSE, fig.align="center", fig.height = 5, fig.width =12}
ggplot(aes(x=tratioHc1), data=res_gr)+ geom_density(alpha=I(0.5)) + facet_grid(. ~ sig2) + stat_function(fun=dt, color="red",args=list(df = 28))
```




T ratio plot: with UHC1
========================================================
- The unfeasible HC1 rejects at nearly 5% in both the heteroskedastic and homoskedastic cases. This is because the errors are precise and the heteroskedasticity is accounted for.

```{r, echo=FALSE, fig.align="center", fig.height = 5, fig.width =12}
ggplot(aes(x=tratioUhc1), data=res_gr)+ geom_density(alpha=I(0.5)) + facet_grid(. ~ sig2) + stat_function(fun=dt, color="red",args=list(df = 28))
```



